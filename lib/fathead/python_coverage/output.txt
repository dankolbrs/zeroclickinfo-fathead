CoveragePlugin file_reporter	A										<section class="prog_container"><pre><code>file_reporter(filename)</pre></code><p>Get the FileReporter class to use for a file.\nThis will only be invoked if filename returns non-None from\nfile_tracer().  It’s an error to return None from this method.\nReturns a FileReporter object to use to report on filename.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.CoveragePlugin.file_reporter
CoveragePlugin sys_info	A										<section class="prog_container"><pre><code>sys_info()</pre></code><p>Get a list of information useful for debugging.\nThis method will be invoked for --debug=sys.  Your\nplugin can return any information it wants to be displayed.\nReturns a list of pairs: [(name, value), ...].</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.CoveragePlugin.sys_info
FileTracer line_number_range	A										<section class="prog_container"><pre><code>line_number_range(frame)</pre></code><p>Get the range of source line numbers for a given a call frame.\nThe call frame is examined, and the source line number in the original\nfile is returned.  The return value is a pair of numbers, the starting\nline number and the ending line number, both inclusive.  For example,\nreturning (5, 7) means that lines 5, 6, and 7 should be considered\nexecuted.\nThis function might decide that the frame doesn’t indicate any lines\nfrom the source file were executed.  Return (-1, -1) in this case to\ntell coverage.py that no lines should be recorded for this frame.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileTracer.line_number_range
FileTracer dynamic_source_filename	A										<section class="prog_container"><pre><code>dynamic_source_filename(filename, frame)</pre></code><p>Get a dynamically computed source file name.\nSome plugins need to compute the source file name dynamically for each\nframe.\nThis function will not be invoked if\nhas_dynamic_source_filename() returns False.\nReturns the source file name for this frame, or None if this frame\nshouldn’t be measured.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileTracer.dynamic_source_filename
FileTracer source_filename	A										<section class="prog_container"><pre><code>source_filename()</pre></code><p>The source file name for this file.\nThis may be any file name you like.  A key responsibility of a plugin\nis to own the mapping from Python execution back to whatever source\nfile name was originally the source of the code.\nSee CoveragePlugin.file_tracer() for details about static and\ndynamic file names.\nReturns the file name to credit with this execution.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileTracer.source_filename
FileReporter exit_counts	A										<section class="prog_container"><pre><code>exit_counts()</pre></code><p>Get a count of exits from that each line.\nTo determine which lines are branches, coverage.py looks for lines that\nhave more than one exit.  This function creates a dict mapping each\nexecutable line number to a count of how many exits it has.\nTo be honest, this feels wrong, and should be refactored.  Let me know\nif you attempt to implement this method in your plugin...</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileReporter.exit_counts
FileReporter translate_lines	A										<section class="prog_container"><pre><code>translate_lines(lines)</pre></code><p>Translate recorded lines into reported lines.\nSome file formats will want to report lines slightly differently than\nthey are recorded.  For example, Python records the last line of a\nmulti-line statement, but reports are nicer if they mention the first\nline.\nYour plugin can optionally define this method to perform these kinds of\nadjustment.\nlines is a sequence of integers, the recorded line numbers.\nReturns a set of integers, the adjusted line numbers.\nThe base implementation returns the numbers unchanged.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileReporter.translate_lines
FileReporter translate_arcs	A										<section class="prog_container"><pre><code>translate_arcs(arcs)</pre></code><p>Translate recorded arcs into reported arcs.\nSimilar to translate_lines(), but for arcs.  arcs is a set of\nline number pairs.\nReturns a set of line number pairs.\nThe default implementation returns arcs unchanged.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileReporter.translate_arcs
FileReporter source	A										<section class="prog_container"><pre><code>source()</pre></code><p>Get the source for the file.\nReturns a Unicode string.\nThe base implementation simply reads the self.filename file and\ndecodes it as UTF8.  Override this method if your file isn’t readable\nas a text file, or if you need other encoding support.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileReporter.source
FileReporter source_token_lines	A										<section class="prog_container"><pre><code>source_token_lines()</pre></code><p>Generate a series of tokenized lines, one for each line in source.\nThese tokens are used for syntax-colored reports.\nEach line is a list of pairs, each pair is a token:\n[('key', 'def'), ('ws', ' '), ('nam', 'hello'), ('op', '('), ... ]\n\n\nEach pair has a token class, and the token text.  The token classes\nare:\n\n'com': a comment\n'key': a keyword\n'nam': a name, or identifier\n'num': a number\n'op': an operator\n'str': a string literal\n'txt': some other kind of text\n\nIf you concatenate all the token texts, and then join them with\nnewlines, you should have your original source back.\nThe default implementation simply returns each line tagged as\n'txt'.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileReporter.source_token_lines
FileReporter no_branch_lines	A										<section class="prog_container"><pre><code>no_branch_lines()</pre></code><p>Get the lines excused from branch coverage in this file.\nYour plugin can use any method it likes to allow the user to exclude\nlines from consideration of branch coverage.\nReturns a set of line numbers.\nThe base implementation returns the empty set.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileReporter.no_branch_lines
FileReporter arcs	A										<section class="prog_container"><pre><code>arcs()</pre></code><p>Get the executable arcs in this file.\nTo support branch coverage, your plugin needs to be able to indicate\npossible execution paths, as a set of line number pairs.  Each pair is\na (prev, next) pair indicating that execution can transition from the\nprev line number to the next line number.\nReturns a set of pairs of line numbers.  The default implementation\nreturns an empty set.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileReporter.arcs
FileReporter lines	A										<section class="prog_container"><pre><code>lines()</pre></code><p>Get the executable lines in this file.\nYour plugin must determine which lines in the file were possibly\nexecutable.  This method returns a set of those line numbers.\nReturns a set of line numbers.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileReporter.lines
FileReporter relative_filename	A										<section class="prog_container"><pre><code>relative_filename()</pre></code><p>Get the relative file name for this file.\nThis file path will be displayed in reports.  The default\nimplementation will supply the actual project-relative file path.  You\nonly need to supply this method if you have an unusual syntax for file\npaths.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileReporter.relative_filename
FileReporter missing_arc_description	A										<section class="prog_container"><pre><code>missing_arc_description(start, end, executed_arcs=None)</pre></code><p>Provide an English sentence describing a missing arc.\nThe start and end arguments are the line numbers of the missing\narc. Negative numbers indicate entering or exiting code objects.\nThe executed_arcs argument is a set of line number pairs, the arcs\nthat were executed in this file.\nBy default, this simply returns the string “Line {start} didn’t jump\nto {end}”.</p></section>	https://coverage.readthedocs.io/en/latest/api_plugin.html#coverage.FileReporter.missing_arc_description
CoverageData lines	A										<section class="prog_container"><pre><code>lines(filename)</pre></code><p>Get the list of lines executed for a file.\nIf the file was not measured, returns None.  A file might be measured,\nand have no lines executed, in which case an empty list is returned.\nIf the file was executed, returns a list of integers, the line numbers\nexecuted in the file. The list is in no particular order.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.lines
CoverageData measured_files	A										<section class="prog_container"><pre><code>measured_files()</pre></code><p>A list of all files that had been measured.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.measured_files
CoverageData read_file	A										<section class="prog_container"><pre><code>read_file(filename)</pre></code><p>Read the coverage data from filename into this object.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.read_file
CoverageData add_lines	A										<section class="prog_container"><pre><code>add_lines(line_data)</pre></code><p>Add measured line data.\nline_data is a dictionary mapping file names to dictionaries:\n{ filename: { lineno: None, ... }, ...}</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.add_lines
CoverageData file_tracer	A										<section class="prog_container"><pre><code>file_tracer(filename)</pre></code><p>Get the plugin name of the file tracer for a file.\nReturns the name of the plugin that handles this file.  If the file was\nmeasured, but didn’t use a plugin, then “” is returned.  If the file\nwas not measured, then None is returned.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.file_tracer
CoverageData add_file_tracers	A										<section class="prog_container"><pre><code>add_file_tracers(file_tracers)</pre></code><p>Add per-file plugin information.\nfile_tracers is { filename: plugin_name, ... }</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.add_file_tracers
CoverageData add_to_hash	A										<section class="prog_container"><pre><code>add_to_hash(filename, hasher)</pre></code><p>Contribute filename‘s data to the hasher.\nhasher is a coverage.misc.Hasher instance to be updated with\nthe file’s data.  It should only get the results data, not the run\ndata.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.add_to_hash
CoverageData arcs	A										<section class="prog_container"><pre><code>arcs(filename)</pre></code><p>Get the list of arcs executed for a file.\nIf the file was not measured, returns None.  A file might be measured,\nand have no arcs executed, in which case an empty list is returned.\nIf the file was executed, returns a list of 2-tuples of integers. Each\npair is a starting line number and an ending line number for a\ntransition from one line to another. The list is in no particular\norder.\nNegative numbers have special meaning.  If the starting line number is\n-N, it represents an entry to the code object that starts at line N.\nIf the ending ling number is -N, it’s an exit from the code object that\nstarts at line N.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.arcs
CoverageData has_arcs	A										<section class="prog_container"><pre><code>has_arcs()</pre></code><p>Does this data have arcs?\nArc data is only available if branch coverage was used during\ncollection.\nReturns a boolean.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.has_arcs
CoverageData add_run_info	A										<section class="prog_container"><pre><code>add_run_info(**kwargs)</pre></code><p>Add information about the run.\nKeywords are arbitrary, and are stored in the run dictionary. Values\nmust be JSON serializable.  You may use this function more than once,\nbut repeated keywords overwrite each other.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.add_run_info
CoverageData line_counts	A										<section class="prog_container"><pre><code>line_counts(fullpath=False)</pre></code><p>Return a dict summarizing the line coverage data.\nKeys are based on the file names, and values are the number of executed\nlines.  If fullpath is true, then the keys are the full pathnames of\nthe files, otherwise they are the basenames of the files.\nReturns a dict mapping file names to counts of lines.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.line_counts
CoverageData run_infos	A										<section class="prog_container"><pre><code>run_infos()</pre></code><p>Return the list of dicts of run information.\nFor data collected during a single run, this will be a one-element\nlist.  If data has been combined, there will be one element for each\noriginal data file.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.run_infos
CoverageData add_arcs	A										<section class="prog_container"><pre><code>add_arcs(arc_data)</pre></code><p>Add measured arc data.\narc_data is a dictionary mapping file names to dictionaries:\n{ filename: { (l1,l2): None, ... }, ...}</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.add_arcs
CoverageData touch_file	A										<section class="prog_container"><pre><code>touch_file(filename)</pre></code><p>Ensure that filename appears in the data, empty if needed.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.touch_file
CoverageData write_fileobj	A										<section class="prog_container"><pre><code>write_fileobj(file_obj)</pre></code><p>Write the coverage data to file_obj.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.write_fileobj
CoverageData erase	A										<section class="prog_container"><pre><code>erase()</pre></code><p>Erase the data in this object.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.erase
CoverageData update	A										<section class="prog_container"><pre><code>update(other_data, aliases=None)</pre></code><p>Update this data with data from another CoverageData.\nIf aliases is provided, it’s a PathAliases object that is used to\nre-map paths to match the local machine’s.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.update
CoverageData __init__	A										<section class="prog_container"><pre><code>__init__(debug=None)</pre></code><p>Create a CoverageData.\ndebug is a DebugControl object for writing debug messages.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.__init__
CoverageData write_file	A										<section class="prog_container"><pre><code>write_file(filename)</pre></code><p>Write the coverage data to filename.</p></section>	https://coverage.readthedocs.io/en/latest/api_coveragedata.html#coverage.CoverageData.write_file
Coverage combine	A										<section class="prog_container"><pre><code>combine(data_paths=None, strict=False)</pre></code><p>Combine together a number of similarly-named coverage data files.\nAll coverage data files whose name starts with data_file (from the\ncoverage() constructor) will be read, and combined together into the\ncurrent measurements.\ndata_paths is a list of files or directories from which data should\nbe combined. If no list is passed, then the data files from the\ndirectory indicated by the current data file (probably the current\ndirectory) will be combined.\nIf strict is true, then it is an error to attempt to combine when\nthere are no data files to combine.\n\nNew in version 4.0: The data_paths parameter.\n\n\nNew in version 4.3: The strict parameter.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.combine
Coverage clear_exclude	A										<section class="prog_container"><pre><code>clear_exclude(which='exclude')</pre></code><p>Clear the exclude list.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.clear_exclude
Coverage exclude	A										<section class="prog_container"><pre><code>exclude(regex, which='exclude')</pre></code><p>Exclude source lines from execution consideration.\nA number of lists of regular expressions are maintained.  Each list\nselects lines that are treated differently during reporting.\nwhich determines which list is modified.  The “exclude” list selects\nlines that are not considered executable at all.  The “partial” list\nindicates lines with branches that are not taken.\nregex is a regular expression.  The regex is added to the specified\nlist.  If any of the regexes in the list is found in a line, the line\nis marked for special treatment during reporting.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.exclude
Coverage html_report	A										<section class="prog_container"><pre><code>html_report(morfs=None, directory=None, ignore_errors=None, omit=None, include=None, extra_css=None, title=None, skip_covered=None)</pre></code><p>Generate an HTML report.\nThe HTML is written to directory.  The file “index.html” is the\noverview starting point, with links to more detailed pages for\nindividual modules.\nextra_css is a path to a file of other CSS to apply on the page.\nIt will be copied into the HTML directory.\ntitle is a text string (not HTML) to use as the title of the HTML\nreport.\nSee report() for other arguments.\nReturns a float, the total percentage covered.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.html_report
Coverage set_option	A										<section class="prog_container"><pre><code>set_option(option_name, value)</pre></code><p>Set an option in the configuration.\noption_name is a colon-separated string indicating the section and\noption name.  For example, the branch option in the [run]\nsection of the config file would be indicated with "run:branch".\nvalue is the new value for the option.  This should be a Python\nvalue where appropriate.  For example, use True for booleans, not the\nstring "True".\nAs an example, calling:\ncov.set_option("run:branch", True)\n\n\nhas the same effect as this configuration file:\n[run]\nbranch = True\n\n\n\nNew in version 4.0.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.set_option
Coverage stop	A										<section class="prog_container"><pre><code>stop()</pre></code><p>Stop measuring code coverage.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.stop
Coverage get_data	A										<section class="prog_container"><pre><code>get_data()</pre></code><p>Get the collected data and reset the collector.\nAlso warn about various problems collecting data.\nReturns a coverage.CoverageData, the collected coverage data.\n\nNew in version 4.0.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.get_data
Coverage start	A										<section class="prog_container"><pre><code>start()</pre></code><p>Start measuring code coverage.\nCoverage measurement only occurs in functions called after\nstart() is invoked.  Statements in the same scope as\nstart() won’t be measured.\nOnce you invoke start(), you must also call stop()\neventually, or your process might not shut down cleanly.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.start
Coverage xml_report	A										<section class="prog_container"><pre><code>xml_report(morfs=None, outfile=None, ignore_errors=None, omit=None, include=None)</pre></code><p>Generate an XML report of coverage results.\nThe report is compatible with Cobertura reports.\nEach module in morfs is included in the report.  outfile is the\npath to write the file to, “-” will write to stdout.\nSee report() for other arguments.\nReturns a float, the total percentage covered.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.xml_report
Coverage analysis2	A										<section class="prog_container"><pre><code>analysis2(morf)</pre></code><p>Analyze a module.\nmorf is a module or a file name.  It will be analyzed to determine\nits coverage statistics.  The return value is a 5-tuple:\n\nThe file name for the module.\nA list of line numbers of executable statements.\nA list of line numbers of excluded statements.\nA list of line numbers of statements not run (missing from\nexecution).\nA readable formatted string of the missing line numbers.\n\nThe analysis uses the source file itself and the current measured\ncoverage data.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.analysis2
Coverage __init__	A										<section class="prog_container"><pre><code>__init__(data_file=None, data_suffix=None, cover_pylib=None, auto_data=False, timid=None, branch=None, config_file=True, source=None, omit=None, include=None, debug=None, concurrency=None)</pre></code><p>data_file is the base name of the data file to use, defaulting to\n”.coverage”.  data_suffix is appended (with a dot) to data_file to\ncreate the final file name.  If data_suffix is simply True, then a\nsuffix is created with the machine and process identity included.\ncover_pylib is a boolean determining whether Python code installed\nwith the Python interpreter is measured.  This includes the Python\nstandard library and any packages installed with the interpreter.\nIf auto_data is true, then any existing data file will be read when\ncoverage measurement starts, and data will be saved automatically when\nmeasurement stops.\nIf timid is true, then a slower and simpler trace function will be\nused.  This is important for some environments where manipulation of\ntracing functions breaks the faster trace function.\nIf branch is true, then branch coverage will be measured in addition\nto the usual statement coverage.\nconfig_file determines what configuration file to read:\n\n\nIf it is ”.coveragerc”, it is interpreted as if it were True,\nfor backward compatibility.\nIf it is a string, it is the name of the file to read.  If the\nfile can’t be read, it is an error.\nIf it is True, then a few standard files names are tried\n(”.coveragerc”, “setup.cfg”, “tox.ini”).  It is not an error for\nthese files to not be found.\nIf it is False, then no configuration file is read.\n\n\nsource is a list of file paths or package names.  Only code located\nin the trees indicated by the file paths or package names will be\nmeasured.\ninclude and omit are lists of file name patterns. Files that match\ninclude will be measured, files that match omit will not.  Each\nwill also accept a single string argument.\ndebug is a list of strings indicating what debugging information is\ndesired.\nconcurrency is a string indicating the concurrency library being used\nin the measured code.  Without this, coverage.py will get incorrect\nresults if these libraries are in use.  Valid strings are “greenlet”,\n“eventlet”, “gevent”, “multiprocessing”, or “thread” (the default).\nThis can also be a list of these strings.\n\nNew in version 4.0: The concurrency parameter.\n\n\nNew in version 4.2: The concurrency parameter can now be a list of strings.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.__init__
Coverage report	A										<section class="prog_container"><pre><code>report(morfs=None, show_missing=None, ignore_errors=None, file=None, omit=None, include=None, skip_covered=None)</pre></code><p>Write a summary report to file.\nEach module in morfs is listed, with counts of statements, executed\nstatements, missing statements, and a list of lines missed.\ninclude is a list of file name patterns.  Files that match will be\nincluded in the report. Files matching omit will not be included in\nthe report.\nIf skip_covered is True, don’t report on files with 100% coverage.\nReturns a float, the total percentage covered.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.report
Coverage analysis	A										<section class="prog_container"><pre><code>analysis(morf)</pre></code><p>Like analysis2 but doesn’t return excluded line numbers.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.analysis
Coverage save	A										<section class="prog_container"><pre><code>save()</pre></code><p>Save the collected coverage data to the data file.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.save
Coverage get_exclude_list	A										<section class="prog_container"><pre><code>get_exclude_list(which='exclude')</pre></code><p>Return a list of excluded regex patterns.\nwhich indicates which list is desired.  See exclude() for the\nlists that are available, and their meaning.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.get_exclude_list
Coverage load	A										<section class="prog_container"><pre><code>load()</pre></code><p>Load previously-collected coverage data from the data file.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.load
Coverage annotate	A										<section class="prog_container"><pre><code>annotate(morfs=None, directory=None, ignore_errors=None, omit=None, include=None)</pre></code><p>Annotate a list of modules.\nEach module in morfs is annotated.  The source is written to a new\nfile, named with a ”,cover” suffix, with each line prefixed with a\nmarker to indicate the coverage of the line.  Covered lines have “>”,\nexcluded lines have “-”, and missing lines have ”!”.\nSee report() for other arguments.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.annotate
Coverage get_option	A										<section class="prog_container"><pre><code>get_option(option_name)</pre></code><p>Get an option from the configuration.\noption_name is a colon-separated string indicating the section and\noption name.  For example, the branch option in the [run]\nsection of the config file would be indicated with “run:branch”.\nReturns the value of the option.\n\nNew in version 4.0.</p></section>	https://coverage.readthedocs.io/en/latest/api_coverage.html#coverage.Coverage.get_option
